service: dynamic-resize

custom:
  stage:
    url: 'https://images.stage.gasbuddy.io'
    bucket: gb-images-stg
  prod:
    url: 'https://images.gasbuddy.io'
    bucket: ''

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    BUCKET: ${self:custom.${self:provider.stage}.bucket}
    URL: ${self:custom.${self:provider.stage}.url}
    REGION: 'us-east-1'
  stage: ${opt:stage, 'stage'}
  region: ${self:provider.environment.REGION}

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "Ref" : "ServerlessDeploymentBucket"
            - "/*"
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "${self:provider.environment.BUCKET}/*"
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "${self:provider.environment.BUCKET}/*"
            - "/*"

package:
  include:
    - index.js
#  exclude:
#    - docker/**

functions:
  dynamicResize:
    handler: index.handler
    Runtime: nodejs6.10
    MemorySize: 1536
    Timeout: 60
    Environment:
      Variables:
        BUCKET: ${self:provider.environment.BUCKET}
        URL:
          GetAtt: ImageBucket.WebsiteURL
    events:
      - http:
          method: get
          path: image
